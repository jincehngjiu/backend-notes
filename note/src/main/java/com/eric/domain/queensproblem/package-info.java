/**
 * <p>
 * 皇后问题（Eight Queens Problem）
 *
 * 背景描述：
 * 八皇后问题是一个经典的算法问题。目标是在一个8×8的国际象棋棋盘上放置八个皇后，使得任何一个皇后都不能攻击到其他皇后。这意味着，任意两个皇后都不能位于同一行、同一列或同一斜线上。
 * 面试要求：
 * 代码功能实现：
 * 在8×8的棋盘上放置八个皇后，使其互不攻击。
 * 保证所有皇后都满足上述约束条件。
 * 代码可读性与可维护性：
 * 使用适当的命名规范，以提升代码的可读性。
 * 采用面向对象的编程风格，模块化设计，提高代码的可维护性和可扩展性。
 * 使用合适的对象结构和算法，确保代码的简洁性。
 * 视频录屏：
 * 录制完整的开发过程，包括代码编写、调试和最终的运行结果。
 * 视频应清晰展示代码的编写思路和解决方案，便于面试官理解和评估。
 * 上传到阿里云或者百度云,给出具体的地址
 * 提示词:
 * 充血模型
 *
 * 题目不是考察算法的, 主要考察面向对象和充血模型以及代码结构性
 * </p>
 * 解题思路及分析
 * 一:分析出具有哪些实体,及其句有的是属性和行为,
 *   1:皇后(Queen)实体
 *    .属性: 行(row),列(col)
 *    .行为:判断是否与其他皇后冲突
 *   2:棋盘(ChessBoard)实体
 *     .属性:
 *          ①:site 标记棋盘大小,比如是n*n结构,使用size属性比较灵活不仅仅能解决8皇后问题还可以解决9,10,.....n-1,n皇后等问题
 *          ②:List<Queen> 标记当前棋盘上的皇后集合
 *      .行为:
 *          ①:检测在(row,col)位置放置皇后是否安全(任意两个皇后都不能位于同一行、同一列或同一斜线上。)
 *          ②:放置皇后到棋盘上
 *          ③:回溯算法,递归调用求解出符合题意的皇后在棋盘上的安全位置
 * @author jcj
 * @since 3/20/25 PM10:57
 */
package com.eric.domain.queensproblem;